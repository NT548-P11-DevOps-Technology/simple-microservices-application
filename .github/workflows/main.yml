name: CI Pipeline
on:
  push:
    branches:
      - main
      - stage
  pull_request:
    branches:
      - main
      - stage
jobs:
  sonar_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up SonarQube Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=devops
            -Dsonar.sources=.
            -Dsonar.exclusions=**/*.java,**/node_modules/**,**/*.json
            -Dsonar.language=js,ts
            -Dsonar.sourceEncoding=UTF-8
  
  build_and_push:
    needs: sonar_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up Docker
        uses: docker/setup-qemu-action@v2
      
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          registry: ${{ secrets.HARBOR_REGISTRY }}
      
      - name: Set environment variables
        id: set-env
        run: |
          echo "PROJECT=class-management" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/stage" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          fi
          echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Build Docker Compose Services
        run: |
          docker-compose build
      
      - name: Push Docker Images
        run: |
          # Define services and corresponding image tags
          declare -A service_tags=(
            ["fe"]="th1enlm02/class-management-fe"
            ["auth-service"]="th1enlm02/class-management-auth-service"
            ["student-service"]="th1enlm02/class-management-student-service"
            ["lecturer-service"]="th1enlm02/class-management-lecturer-service"
            ["class-service"]="th1enlm02/class-management-class-service"
          )
      
          for service in "${!service_tags[@]}"; do
            image_tag="${service_tags[$service]}"

            full_image_name="${{ secrets.HARBOR_REGISTRY }}/${ENVIRONMENT}/${service}"
      
            # Tag images for production
            docker tag "$image_tag" "$full_image_name:$COMMIT_SHA"
            docker tag "$image_tag" "$full_image_name:latest"
            
            # Push images for production
            docker push "$full_image_name:$COMMIT_SHA"
            docker push "$full_image_name:latest"
          done
